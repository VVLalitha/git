
Application Code : https://github.com/lerndevops/samplejavaapp



Java configuration in Jenkins console 
    
    Manage Jenkins --> Global Tool Configuration --> JDK --> Add JDK
        Name: oracle-java1.8 ( can be any string )
        JAVA_HOME: /path/to/javahome ( ex: /usr/lib/jvm/java-8-oracle )

Maven Configuration in Jenkins console
    
    Manage Jenkins --> Global Tool Configuration --> Maven --> Add Maven
        Name: maven3.6 ( can be any string )
        MAVEN_HOME: /path/to/mavenhome ( /opt/apache-maven-3.6.0 )
                

==========================================================================

Install Plugins required for CI Pipeline

    Manage Jenkins --> manage plugins -- Available -- search & install the below
        pmd -- install without restart
        cobertura -- install without restart
        Build Pipeline Plugin  -- install without restart


===========================================================================

CI ( continuous Integration )

build lifecycle  : maven goal           : post build action 
    compile      : compile              : NA
    codereview   : -P metrics pmd:pmd   : **/pmd.xml ( publish pmd analysis results )
    unit test    : test                 : target/surefire-reports/*.xml  ( publish Juni test results )
    metric check : cobertura:cobertura -Dcobertura.report.format=xml : target/site/cobertura/coverage.xml ( publish cobertura coverage report )
    package      : package -- Execute Sonarqube Scanner





http://13.127.22.183:8080/job/clonejob/build?token=myname



-----------------------------------------------------------------------------------------
cd /tmp ; wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-6.7.6.zip ;cd /tmp ; unzip sonarqube-6.7.6.zip ;        cd /tmp ; mv sonarqube-6.7.6 /opt ;        groupadd devops
        useradd devops -m -d /home/devops -s /bin/bash -g devops 
        passwd devops ( enter passwd )
        cd /opt ; chown -R devops:devops sonarqube-6.7.6 ; chmod -R 755 sonarqube-6.7.6
        cd /opt/sonarqube-6.7.6/bin/linux-x86-64/ ; ./sonar.sh start
    
        after starting successfully goto browser & hit below
            http://<IP addr>:9000
            login to sonarqube ( default credentials admin/admin )
















---------------------------------------------------












       /sonarqube/sonarqube-6.7.6.zip
         cd /tmp ; wget https://binaries.sonarsource.com/Distributioncd /tmp ; unzip sonarqube-6.7.6.zip
        cd /tmp ; mv sonarqube-6.7.6 /opt
        groupadd devops
        useradd devops -m -d /home/devops -s /bin/bash -g devops
        passwd devops ( enter passwd )
        cd /opt ; chown -R devops:devops sonarqube-6.7.6 ; chmod -R 755 sonarqube-6.7.6
        cd /opt/sonarqube-6.7.6/bin/linux-x86-64/ ; ./sonar.sh start
    
        after starting successfully goto browser & hit below
            http://<IP addr>:9000
            login to sonarqube ( default credentials admin/admin )
            
            
            
apt-get install zip 
apt-get install unzip

Jenkins Configuration 

    Step1: Installing sonarqube plugin in Jenkins
            Manage Jenkins --> manager plugins --> install plugin ( SonarQube Scanner for Jenkins )
            
    Step2: sonarqube configuration in Jenkins
            Manage Jenkins --> configure System --> SonarQube servers --> configure below
                Name: sonarqube ( can be any string )
                Server URL: http://192.168.40.128:9002 < http://<machine IP of where sonarqube is installed>:<port on which sonarqube is running>
                Server authentication token: < the token you will get it when you login to sonarqube console )
                
    Step3: SonarQube Runner Configuration in Jenkins
            Manage Jenkins --> Global Tool Configuration --> SonarQube Scanner --> configure below
                Name: sonar-runner ( can be any string )
                SONAR_RUNNER_HOME: path of sonar-runner installation on Jenkins Server ( /opt/sonar-runner-dist-2.4 )
                
                
                
    sonar        :  sonar.projectKey=sampleapp
                    sonar.ProjectName=sampleapp
                    sonar.sources=src/main/java/
                    sonar.java.binaries=target/classes/
                    sonar.language=java
                    sonar.java.source=1.8
